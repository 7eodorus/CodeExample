<?php
/**
 * –î–µ—Ç–µ–∫—Ç–æ—Ä –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø—É–ª–ª-—Ä–µ–∫–≤–µ—Å—Ç–æ–≤
 *
 * @since #VDS-1210
 *
 * @author Dmitry Voronin <dmv@VDS.org>
 */
namespace app\modules\VDS\services\detectors;

use Yii;
use app\modules\VDS\components\PullRequest;

class OpenPullRequestDetector extends DetectorAbstract
{
    /**
     * @string –ö–ª—é—á –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º –æ –ø–æ–≥–æ–¥–µ
     */
    const WEATHER_API_KEY = '1b8c07128110107f0263adb231a9b6ca';

    /** {@inheritdoc} */
    public function detect()
    {
        $this->filterPullRequests($this->_chat->tc_pull_request_updated_offset);

        return true;
    }

    /** {@inheritdoc} */
    public function notify()
    {
        $index = 1;
        $notify = [];

        foreach ($this->_openPullRequests as $pullRequestItem) {
            // dz: —Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            $text = sprintf(
                "\n\n" . '%d. %s %s %s[%s](%s)%s –∂–¥–µ—Ç *%s*',
                $index++,
                $pullRequestItem->isOwnerApprove() ? '‚úÖ ' : '',
                ($pullRequestItem->getDiffsCount() > $this->_config['complexityLimit'] ? '' : self::SMALL_SIZE_ICON),
                $pullRequestItem->isNeedWork() ? '‚õîÔ∏è ' : '',
                $pullRequestItem->getTaskKey() . ':' . $pullRequestItem->getJiraTicket()->getSummaryFiltred(),
                $pullRequestItem->getLink(),
                $pullRequestItem->getJiraTicket()->isExpedite() ? 'üöÄ' : '',
                $this->prepareTime($pullRequestItem->timeWaitFromLastUpdated())
            );
            // dz: –Ω–∞—Ö–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
            if ($pullRequestItem->getCreateTime() <> $pullRequestItem->getUpdateTime()) {
                $text .= sprintf(' –∏–∑ %s', $this->prepareTime($pullRequestItem->timeWaitFromCreated()));
            }
            // dz: —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö, –∫—Ç–æ —É–∂–µ –æ—Å—Ç–∞–≤–∏–ª –∞–ø–ø—Ä—É–≤
            if ($pullRequestItem->getApprovedUser()) {
                $text .= sprintf(' (—É–∂–µ –µ—Å—Ç—å –∞–ø–ø—Ä—É–≤ –æ—Ç %s)', implode(', ', $pullRequestItem->getApprovedUserName()));
            }
            // dz: —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö
            $textDeadline = $this->getDeadlineNotify($pullRequestItem);
            if ($textDeadline) {
                $text .=  sprintf(' üìÜ –¥–µ–¥–ª–∞–π–Ω %s', $textDeadline);
            }

            $notify[] = $text;
        }

        $notify = implode('', $notify);
        $notify .= "\n\n" . Yii::t(
            'app',
            '–í—Å–µ–≥–æ {n,plural,=0{–Ω–µ—Ç –∑–∞–¥–∞—á} =1{# –∑–∞–¥–∞—á–∞} =2{# –∑–∞–¥–∞—á–∏} =3{# –∑–∞–¥–∞—á–∏} =4{# –∑–∞–¥–∞—á–∏} other{# –∑–∞–¥–∞—á}} –≤–∏—Å–∏—Ç –Ω–∞ —Ä–µ–≤—å—é',
            ['n' => count($this->_openPullRequests)]
        );

        return [
            [
                'chatId' => $this->_chat->tc_id,
                'message' => $this->getNotifyPrefix() . $notify,
            ]
        ];
    }

    /** {@inheritdoc} */
    protected function filterPullRequests($offset)
    {
        // dmv: –¥–ª—è –æ–±—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø—É–ª-—Ä–µ–∫–≤–µ—Å—Ç–∞—Ö, –∏—Ç–µ–º—ã —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –∞–ø–ø—Ä—É–≤–æ–º –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ–≥–¥–∞ @WTT-5785
        $pullRequests = $this->_openPullRequests;
        $this->_openPullRequests = array_filter($pullRequests, function (PullRequest $item) use ($offset) {
            return $item->isOwnerApprove() || ($item->timeWaitFromLastUpdated() > $offset);
        });
    }

    /**
     * –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—É–ª-—Ä–µ–∫–≤–µ—Å—Ç–∞—Ö
     *
     * @return string
     */
    private function getNotifyPrefix()
    {
        if (!$this->_config['addPrefixToMessage']) {
            return '';
        }

        $texts = [
            '–í—Ä–µ–º—è —Ä–µ–≤—å—é–∏—Ç—å!',
            '–°—Ç–æ–ª—å–∫–æ –∑–∞–¥–∞—á, –∞ –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–æ—Ç—Ä–∏—Ç :(',
            '–°–∫—É—á–Ω–æ? –ù–µ –∑–Ω–∞–µ—à—å —á–µ–º –∑–∞–Ω—è—Ç—å—Å—è? –ü–æ—Å–º–æ—Ç—Ä–∏ –∑–∞–¥–∞—á–∏ –Ω–∞ –∫–æ–¥—Ä–µ–≤—å—é!',
            '–°–¥–µ–ª–∞–π –ø–æ–ª–µ–∑–Ω–æ–µ –¥–µ–ª–æ - –∑–∞–∞–ø—Ä—É–≤—å —Ä–µ–∫–≤–µ—Å—Ç!',
            '–£–∂–µ –≤—Å–µ –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ —Å–≤–µ–∂–∏–µ –∑–∞–¥–∞—á–∫–∏ –Ω–∞ —Ä–µ–≤—å—é?',
            '–°–∞–º–æ–µ –≤—Ä–µ–º—è –∑–∞–Ω—è—Ç—å—Å—è —Ä–µ–≤—å—é.',
        ];
        $text = $texts[array_rand($texts)];

        if (mt_rand(0, 10) < 5) {
            $text = $this->getCurrentWeatherAndLocationText() . ' ' . $text;
        }

        return $text;
    }

    /**
     * –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–≥–æ–¥–µ –∏ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫ –∏–Ω–æ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è—è —á—Ç–æ-—Ç–æ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è –∫ —Å—Ç—Ä–æ–∫–µ
     *
     * @author Dmitry Vorobyev
     *
     * @return string
     */
    protected function getCurrentWeatherAndLocationText()
    {
        $cities = [
            [
                'code' => 'New York,US',
                'text' => '–ù—å—é-–ô–æ—Ä–∫–µ',
                'funny' =>
                    [
                        ' –Ω–∞ –ë—Ä–∞–π—Ç–æ–Ω –±–∏—á',
                        ', –¥–∞ –∏ –º–µ—Ç—Ä–æ —Ö—É–∂–µ –Ω–∞—à–µ–≥–æ',
                        '',
                        '',
                        '',
                    ],
            ],
            [
                'code' => 'Moscow,RU',
                'text' => '–ú–æ—Å–∫–≤–µ',
                'funny' =>
                    [
                        ' —É –°–æ–±—è–Ω–∏–Ω–∞',
                        ', –∞ –æ–Ω–∏ –ø–ª–∏—Ç–∫—É –ø–µ—Ä–µ–∫–ª–∞–¥—ã–≤–∞—é—Ç',
                        ', –∞ –≤—Å–µ –≥–æ–≤–æ—Ä—è—Ç —á—Ç–æ –Ω–µ—Ä–µ–∑–∏–Ω–æ–≤–∞—è',
                        '. –ê –µ—â–µ –º–µ–¥–≤–µ–¥–∏ –ø–æ —É–ª–∏—Ü–∞–º –≥—É–ª—è—é—Ç',
                        ', —Ö–æ—Ç—è –ø—Ä–∏ –õ—É–∂–∫–æ–≤–µ —Ç–∞–∫–æ–≥–æ –Ω–µ –±—ã–ª–æ',
                        '',
                    ],
            ],
            [
                'code' =>
                    'Paris,FR',
                'text' => '–ü–∞—Ä–∏–∂–µ',
            ],
            [
                'code' => 'Tokyo,JP',
                'text' => '–¢–æ–∫–∏–æ',
            ],
            [
                'code' => 'Sydney,AU',
                'text' => '–°–∏–¥–Ω–µ–µ',
                'funny' =>
                    [
                        ', –∞ –Ω–∞ —Å–µ—Ä—Ñ –Ω–µ –¥—É–µ—Ç',
                        '',
                        '',
                        '',
                        '',
                    ],
            ],
            [
                'code' => 'London,UK',
                'text' => '–õ–æ–Ω–¥–æ–Ω–µ',
                'funny' =>
                    [
                        ' —É –æ–ª–∏–≥–∞—Ä—Ö–æ–≤',
                        ' —É –ê–±—Ä–∞–º–æ–≤–∏—á–∞',
                        '',
                        '',
                        '',
                        '',
                    ],
            ],
        ];
        $city = $cities[array_rand($cities)];

        $weatherData = json_decode(
            file_get_contents('https://api.openweathermap.org/data/2.5/weather?' . http_build_query([ 'appid' => self::WEATHER_API_KEY, 'lang' => 'ru', 'q' => $city['code']])),
            true
        );

        $text = sprintf('–í %s %s', $city['text'], $weatherData['weather'][0]['description']);

        if (mt_rand(0, 10) < 5) {
            // vdm: –≤ –¥–∞–Ω–Ω—ã—Ö –µ—Å—Ç—å –Ω–µ–±–æ–ª—å—à–æ–π –±–∞–≥: –æ–Ω–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è –ø–æ—ç—Ç–æ–º—É —Ä–∞—Å—Å–≤–µ—Ç –≤ –°–∏–¥–Ω–µ–µ –±—É–¥–µ—Ç –ø–æ–ø–∞–¥–∞—Ç—å –Ω–µ –æ—á–µ–Ω—å —á–∞—Å—Ç–æ
            $sunriseDiff = time() - $weatherData['sys']['sunrise'];
            $sunsetDiff = time() - $weatherData['sys']['sunset'];

            if ($sunriseDiff < 0 && $sunriseDiff > -45 * 60) {
                $text .= ' –∏ —É–∂–µ —Å–∫–æ—Ä–æ —Ä–∞—Å—Å–≤–µ—Ç';
            } elseif ($sunriseDiff > 0 && $sunriseDiff < 45 * 60) {
                $text .= ' –∏ —Ä–∞—Å—Å–≤–µ–ª–æ';
            } elseif ($sunsetDiff < 0 && $sunsetDiff > -45 * 60) {
                $text .= ' –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç —Ç–µ–º–Ω–µ—Ç—å';
            } elseif ($sunsetDiff > 0 && $sunsetDiff < 45 * 60) {
                $text .= ' –∏ —Å—Ç–µ–º–Ω–µ–ª–æ';
            }
        }

        if (mt_rand(0, 50) < 5 && !empty($city['funny'])) {
            $text .= $city['funny'][array_rand($city['funny'])];
        }

        $text .= '.';

        return $text;
    }
}